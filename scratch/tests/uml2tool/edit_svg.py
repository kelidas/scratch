import re
from numpy import arange

'''
    Replace the Class image and Operation image in <svg> file 
    generated by uml2tool and replace fill="white" by fill="none"
    (repair problem with white boxes).
'''

# vector defined class image
CLASS = '''<g
     id="g%s"
     style="fill:#f0f5fa;fill-opacity:1;stroke:#4c7eb1;stroke-opacity:1"
     transform="translate(-49.960785,162.46712)">
    <rect
       y="%s"
       x="%s"
       height="14.022982"
       width="12.010363"
       id="rect3071"
       style="fill:#f0f5fa;fill-opacity:1;stroke:#4c7eb1;stroke-opacity:1" />
    <path
       inkscape:connector-curvature="0"
       id="path3841"
       d="m %s,%s 11.889938,0.03096"
       style="fill:#f0f5fa;fill-opacity:1;stroke:#4c7eb1;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
    <path
       inkscape:connector-curvature="0"
       id="path3843"
       d="m %s,%s 11.611268,0"
       style="fill:#f0f5fa;fill-opacity:1;stroke:#4c7eb1;stroke-width:1px;stroke-linecap:butt;stroke-linejoin:miter;stroke-opacity:1" />
  </g>'''

# vector defined operation image
OPERATION = '''  <path
     sodipodi:type="star"
     style="fill:#f0f5fa;fill-opacity:1;stroke:#4c7eb1;stroke-opacity:1"
     id="path%s"
     sodipodi:sides="10"
     sodipodi:cx="%s"
     sodipodi:cy="%s"
     sodipodi:r1="6.4262023"
     sodipodi:r2="3.2131009"
     sodipodi:arg1="-1.6509812"
     sodipodi:arg2="-1.3368219"
     inkscape:flatsided="false"
     inkscape:rounded="0"
     inkscape:randomized="0"
     d="m %s,%s 1.259675,3.280002 2.60372,-2.359202 -0.908838,3.393996 3.493158,-0.378206 -2.730206,2.211599 3.048328,1.747251 -3.508728,0.184446 1.439141,3.205319 -2.947036,-1.913159 -0.71975,3.439063 -1.259675,-3.280002 -2.60372,2.359202 0.908838,-3.393996 -3.493158,0.378206 2.730206,-2.211598 -3.048328,-1.747252 3.508728,-0.184446 -1.43914,-3.205319 2.947035,1.913159 z"
     transform="translate(-15.103943,124.69534)" />
     '''

# part of the raster image data -- class and operation
# serve for identification of raster image in svg file
CLASS_img = r'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAr0lEQVR42mNkgIKC&#13;&#10;BUf+'
OPERATION_img = r'iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAACM0lEQVR42sVTX0hT&#13;&#10;URz+'


fin = open( 'pok.svg', 'r' )

data = fin.readlines()
fin.close()
print 'input file loaded'

H = 196 # the first file height (reference hight)
n = 10000 # basic number for objects
print 'START REPAIRING'
idxs = arange( len( data ) )
for idx, dat in zip( idxs, data ):
    match = re.findall( r'<svg.+', dat )
    #print match
    if match:
        height = re.search( r'height="(\d+)', str( match ) ).group( 1 )
        print 'page height', height
    match = re.findall( r'<image.+', dat )
    if match:
        x = re.search( r'x="(\d+)', str( match ) ).group( 1 )
        y = re.search( r'y="(\d+)', str( match ) ).group( 1 )
        if re.search( CLASS_img + '.+', str( match ) ):
            data[idx] = CLASS % ( n + int( idx ), \
                               19.009897 + float( y ) - H + 15, 50.462502 + float( x ), \
                               50.460785 + float( x ), 27.027699 + float( y ) - H + 15, \
                               50.646565 + float( x ), 30.031147 + float( y ) - H + 15 )
            print 'repaired class'
        if re.search( OPERATION_img + '.+', str( match ) ):
            data[idx] = OPERATION % ( n + int( idx ),
                                   23.448904 + float( x ), 63.54229 + float( y ) + 16 + -H,
                                   22.934172 + float( x ), 57.136735 + float( y ) + 16 - H )
            print 'repaired operation'

print 'repair white'
for idx, dat in zip( idxs, data ):
    data[idx] = re.sub( r'fill="white"', 'fill="none"', dat )
    



fout = open( 'pok_py.svg', 'w' )

fout.writelines( data )
fout.close()

print 'repaired image saved'

raw_input( 'Waiting for ENTER!' )
